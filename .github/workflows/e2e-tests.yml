name: E2E Tests

on:
  push:
    branches: [main, dev]
    paths-ignore:
      - '*.md'
      - 'docs/**'
  pull_request:
    branches: [main]
    paths-ignore:
      - '*.md'
      - 'docs/**'
  workflow_dispatch: # Allows manual trigger

env:
  NODE_VERSION: '18'

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  e2e-tests:
    name: Run E2E Tests
    timeout-minutes: 20
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: 📦 Install dependencies
      run: npm ci --prefer-offline --no-audit
      
    - name: 🎭 Install Playwright
      run: npx playwright install --with-deps chromium
      
    - name: 🏗️ Build Next.js application
      run: npm run build
      
    - name: 🚀 Start application
      run: |
        npm start &
        echo "APP_PID=$!" >> $GITHUB_ENV
      
    - name: ⏳ Wait for application
      run: npx wait-on http://localhost:3001 --timeout 60000 --interval 1000
      
    - name: 🧪 Run Playwright tests
      run: npx playwright test
      env:
        CI: true
        
    - name: 📊 Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: |
          playwright-report/
          test-results/
        retention-days: 30
        
    - name: 💬 Comment PR with test results
      uses: actions/github-script@v7
      if: always() && github.event_name == 'pull_request'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const testStatus = '${{ job.status }}' === 'success' ? '✅ PASSED' : '❌ FAILED';
          const testResult = '${{ job.status }}' === 'success' ? 'passed' : 'failed';
          const reportLink = '${{ job.status }}' !== 'success' ? '📋 Check the [test report](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.' : '';

          const body = `## E2E Test Results ${testStatus}

          🎭 Playwright tests have ${testResult}.

          ${reportLink}
          `;

          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });